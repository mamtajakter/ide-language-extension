{
  tokens = [
    space='regexp:\s+'
    string="regexp:\"[^\"]*\"|'[^']*'"
    number="regexp:(\+|\-)?\p{Digit}*"
    id="regexp:\p{Alpha}\w*"
    semi=';'
    colon=':'
  ]
  extends("st_.*")=statement
  pin("st_.*")=2
}

root ::= (&':' statement) * {pin(".*")=1}

statement ::= st_case1
  | st_case2 
  | st_case3
  {recoverWhile=st_recover}
private st_recover ::= !':'

// case1: public predicate recovery
st_case1 ::= ':' 'case1' string? predicate name ';'
predicate ::= &id {recoverWhile=predicate_recover}
name ::= id
private predicate_recover ::= !(':' | ';' | id | number)

// case2: public left predicate
st_case2 ::= ':' 'case2' string? name left_predicate name ';'
left left_predicate ::= &id

//case3: last seq item error not reported
st_case3 ::= ':' 'case3' pinned_seq ';'
private pinned_seq ::= <<wrap id>> <<wrap number>> <<wrap id>> <<wrap number>> {pin=1}
private meta wrap ::= <<param>>